{"version":3,"sources":["components/svg/bars-solid.svg","components/Context.js","components/Header.js","components/section/Products.js","components/section/Cart.js","components/section/Payment.js","components/Section.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","DataContext","React","createContext","DataProvider","state","products","cart","total","addCart","id","every","item","_id","data","filter","product","setState","alert","reduction","forEach","count","getTotal","increase","removeProduct","window","confirm","index","splice","res","reduce","prev","price","localStorage","setItem","JSON","stringify","this","dataCart","parse","getItem","dataTotal","Provider","value","props","children","Component","Header","toggle","menuToggle","context","className","onClick","src","Menu","alt","width","to","length","style","backgroundColor","height","border","borderRadius","contextType","Products","map","key","discount","title","quantity","Cart","textAlign","Payment","marginBottom","stripeKey","name","amount","token","currency","Section","path","component","exact","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cc3404ac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bars-solid.b3f49afd.svg\";","import React, { Component } from 'react'\n\nexport const DataContext = React.createContext();\n\nexport class DataProvider extends Component {\n\n    state = {\n        products: [\n            {\n                \"_id\": \"1\",\n                \"title\": \"Aashirvad Select Whole wheat Sharbati Atta\",\n                \"src\": \"//cdn.grofers.com/app/images/products/full_screen/pro_7.jpg\",\n                \"discount\":\"20% off\",\n                \"price\": 23,\n                \"quantity\": \"5 kg\" ,\n                \"count\": 1\n            },\n            {\n                \"_id\": \"2\",\n                \"title\": \"Chakki Atta\",\n                \"src\": \"//cdn.grofers.com/app/images/products/full_screen/pro_388639.jpg\",\n                \"discount\":\"20% off\",\n                \"price\": 19,\n                \"quantity\": \"5 kg\" ,\n                \"count\": 1\n            },\n            {\n                \"_id\": \"3\",\n                \"title\": \"Grofers Mothers Choice  Soyabin Oil\",\n                \"src\": \"https://cdn.grofers.com/app/images/products/normal/pro_425557.jpg?ts=1593085402\",\n                \"discount\":\"20% off\",\n                \"price\": 50,\n                \"quantity\": \"5 kg\" ,\n                \"count\": 1\n            },\n            {\n                \"_id\": \"4\",\n                \"title\": \"Parachute 100% Pure Coconut Oil\",\n                \"src\": \"//cdn.grofers.com/app/images/products/normal/pro_392004.jpg?ts=1610701653\",\n                \"discount\":\"20% off\",\n                \"price\": 35,\n                \"quantity\": \"5 kg\" ,\n                \"count\": 1\n            },\n            {\n                \"_id\": \"5\",\n                \"title\": \"MDH Mutton Meat Masala\",\n                \"src\": \"//cdn.grofers.com/app/images/products/full_screen/pro_18912.jpg\",\n                \"discount\":\"20% off\",\n                \"price\": 73,\n                \"quantity\": \"100 g\" ,\n                \"count\": 1\n            },\n            {\n                \"_id\": \"6\",\n                \"title\": \"Rajdhani Besan\",\n                \"src\": \"//cdn.grofers.com/app/images/products/full_screen/pro_23653.jpg\",\n                \"discount\":\"20% off\",\n                \"price\": 56,\n                \"quantity\": \"5 kg\" ,\n                \"count\": 1\n            },\n            {\n                \"_id\": \"7\",\n                \"title\": \"Tata Salt\",\n                \"src\": \"//cdn.grofers.com/app/images/products/full_screen/pro_105.jpg\",\n                \"discount\":\"20% off\",\n                \"price\": 17,\n                \"quantity\": \"5 kg\" ,\n                \"count\": 1\n            },\n            {\n                \"_id\": \"8\",\n                \"title\": \"Kissan Tomotto Ketchup\",\n                \"src\": \"https://5.imimg.com/data5/OB/FL/MY-13920102/kissan-fresh-tomato-ketchup-1kg-bottle-500x500.jpg\",\n                \"discount\":\"20% off\",\n                \"price\": 120,\n                \"quantity\": \"1 kg\" ,\n                \"count\": 1\n            }\n        ],\n        cart: [],\n        total: 0\n        \n    };\n\n    addCart = (id) =>{\n        const {products, cart} = this.state;\n        const check = cart.every(item =>{\n            return item._id !== id\n        })\n        if(check){\n            const data = products.filter(product =>{\n                return product._id === id\n            })\n            this.setState({cart: [...cart,...data]})\n        }else{\n            alert(\"The product has been added to cart.\")\n        }\n    };\n\n    reduction = id =>{\n        const { cart } = this.state;\n        cart.forEach(item =>{\n            if(item._id === id){\n                item.count === 1 ? item.count = 1 : item.count -=1;\n            }\n        })\n        this.setState({cart: cart});\n        this.getTotal();\n    };\n\n    increase = id =>{\n        const { cart } = this.state;\n        cart.forEach(item =>{\n            if(item._id === id){\n                item.count += 1;\n            }\n        })\n        this.setState({cart: cart});\n        this.getTotal();\n    };\n\n    removeProduct = id =>{\n        if(window.confirm(\"Do you want to delete this product?\")){\n            const {cart} = this.state;\n            cart.forEach((item, index) =>{\n                if(item._id === id){\n                    cart.splice(index, 1)\n                }\n            })\n            this.setState({cart: cart});\n            this.getTotal();\n        }\n       \n    };\n\n    getTotal = ()=>{\n        const{cart} = this.state;\n        const res = cart.reduce((prev, item) => {\n            return prev + (item.price * item.count);\n        },0)\n        this.setState({total: res})\n    };\n    \n    componentDidUpdate(){\n        localStorage.setItem('dataCart', JSON.stringify(this.state.cart))\n        localStorage.setItem('dataTotal', JSON.stringify(this.state.total))\n    };\n\n    componentDidMount(){\n        const dataCart = JSON.parse(localStorage.getItem('dataCart'));\n        if(dataCart !== null){\n            this.setState({cart: dataCart});\n        }\n        const dataTotal = JSON.parse(localStorage.getItem('dataTotal'));\n        if(dataTotal !== null){\n            this.setState({total: dataTotal});\n        }\n    }\n   \n\n    render() {\n        const {products, cart,total} = this.state;\n        const {addCart,reduction,increase,removeProduct,getTotal} = this;\n        return (\n            <DataContext.Provider \n            value={{products, addCart, cart, reduction,increase,removeProduct,total,getTotal}}>\n                {this.props.children}\n            </DataContext.Provider>\n        )\n    }\n}\n\n\n","import React, { Component } from 'react'\nimport Menu from './svg/bars-solid.svg'\n//import Close from './svg/times-solid.svg'\n//import CartIcon from './svg/shopping-cart-solid.svg'\nimport {Link} from 'react-router-dom'\nimport './css/Header.css'\nimport {DataContext} from './Context'\n\n\n\nexport class Header extends Component {\n    static contextType = DataContext;\n\n    state = {\n        toggle: false\n    }\n\n    menuToggle = () =>{\n        this.setState({toggle: !this.state.toggle})\n    }\n\n\n    render() {\n       // const {toggle} = this.state;\n        const {cart} = this.context;\n        return (\n            <header>\n                <div className=\"menu\" onClick={this.menuToggle}>\n                    <img src={Menu} alt=\"\" width=\"20\"/>\n                </div>\n                <div className=\"logo\">\n                    <h1><Link to=\"/\">My Grocery Shop</Link></h1>\n                </div>\n                <nav>\n                   \n                    <div className=\"nav-cart\">\n                        <span>{cart.length}</span>\n                        <Link to=\"/cart\">\n                            <button style={{backgroundColor:\"white\",\n                                            height: \"35px\",\n                                            width:\"80px\",\n                                            border: \"1px solid grey\",\n                                            borderRadius: \"20px\"}}>Cart</button>\n                        </Link>\n                    </div>\n                </nav>\n            </header>\n        )\n    }\n}\n\nexport default Header\n","import React, { Component } from 'react'\nimport { BsChevronRight } from \"react-icons/bs\";\nimport {DataContext} from '../Context'\nimport '../css/Products.css'\n\nexport class Products extends Component {\n\n    static contextType = DataContext;\n\n    render() {\n        const {products,addCart} = this.context;\n        return (\n            <div id=\"product\">\n               {\n                   products.map(product =>(\n                       <>\n                    \n                       <div className=\"card\" key={product._id}>\n                       <div className=\"product_discount\">{product.discount}</div>\n                         <div className=\"card_top\">\n                         \n                            <img className=\"product_image\" src={product.src} alt=\"\"/>\n                           \n                            <span className=\"product_title\" >{product.title}</span>\n                           \n                         </div>\n                            <p>{product.quantity}</p>\n                          \n                          <div className=\"card_bottom\">\n                          <span>RS {product.price}</span>\n                          <button className=\"button\" onClick={()=> addCart(product._id)}>Add to cart</button>\n                          </div>\n                              \n                          <button className=\"club_price\">Club Price: RS 240<BsChevronRight/></button> \n                       </div>\n                       </>\n                   ))\n               }\n            </div>\n        )\n    }\n}\n\nexport default Products\n","import React, { Component } from 'react'\nimport {DataContext} from '../Context'\nimport {Link} from 'react-router-dom'\n\nimport '../css/Cart.css'\n\nexport class Cart extends Component {\n    static contextType = DataContext;\n\n    componentDidMount(){\n        this.context.getTotal();\n    }\n    \n    render() {\n        const {cart,increase,reduction,removeProduct,total} = this.context;\n        if(cart.length === 0){\n            return <h2 style={{textAlign:\"center\"}}>Nothings Product</h2>\n        }else{\n            return (\n                <>\n                    <div className=\"my_cart\">My Cart ({cart.length}items)</div>\n                    <div className=\"subtotal\"><p>Sub Total</p><h3>RS {total}</h3></div>\n                    <div className=\"delivery_charges\"><p>Delivery Charges</p><h3>Free</h3></div>\n                    {\n                        cart.map(item =>(\n                            \n                            <div className=\"cart_item\"key={item._id}>\n                                \n                                <img className=\"cart_img\"src={item.src} alt=\"\"/>\n                                <div className=\"product_description\">\n                                    <div className=\"pd1\">\n                                        <div className=\"product_discount_cart\">{item.discount}</div>\n                                        <span>{item.title}</span>\n                                        <p>{item.quantity}</p>\n                                        \n                                    </div>\n                                   \n            \n                                    <div className=\"pd2\">\n                                        <div>\n                                        <button  onClick={() => reduction(item._id)}> - </button>\n                                        <span>{item.count}</span>\n                                        <button  onClick={() => increase(item._id)}> + </button>\n                                        </div>\n                                        <span>RS {item.price * item.count}</span>\n                                    </div>\n                                </div>\n                                <div className=\"delete\" onClick={() => removeProduct(item._id)}>X</div>\n                            </div>\n                        ))\n                    }\n                    \n                        <Link className=\"checkout_button\" to=\"/payment\"><p>Proceed To Checkout</p><h3>RS {total} </h3></Link>\n                        \n                   \n                </>\n                )\n            }\n        }\n}\n\nexport default Cart\n","import React, { Component } from 'react'\nimport StripeCheckout from 'react-stripe-checkout'\nimport {DataContext} from '../Context'\n\nexport class Payment extends Component {\n    static contextType = DataContext;\n   \n    render() {\n        const {total} = this.context;\n        return (\n            <div>\n               <h2 style={{marginBottom:\"30px\"}}>Proceed To Payment</h2> \n               <StripeCheckout\n                 stripeKey=\"pk_test_51IOnoACFBYgiRIqNwxPUStvWBC0KGPiL3TAiKedJYY49DBZt1a7edgo0tKr1LUDrOBAd0E1eq1fnxbO0nCpQBhxY004GVqSj1s\"\n                 name=\"Total Payment\"\n                 amount={total*100}\n                 token={()=> alert(\"Your Payment is Successful!\")}\n                currency=\"INR\"\n               />\n            </div>\n        )\n    }\n}\n\nexport default Payment\n","import React, { Component } from 'react'\nimport Products from './section/Products'\n\nimport {Route} from \"react-router-dom\"\nimport Cart from './section/Cart'\nimport Payment from './section/Payment'\n\n\nexport class Section extends Component {\n    render() {\n        return (\n            <section>\n                    <Route path=\"/shopping-cart-react\" component={Products} exact />\n                    <Route path=\"/product\" component={Products} exact  />\n                    \n                    <Route path=\"/cart\" component={Cart}  exact/>\n                    <Route path=\"/payment\" component={Payment} exact />\n            </section>\n        )\n    }\n}\n\nexport default Section\n","import React from 'react';\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport Header from './components/Header'\nimport Section from './components/Section'\nimport {DataProvider} from './components/Context'\n\n\nclass App extends React.Component{\n  render(){\n    return(\n      <DataProvider>\n        <div className=\"app\">\n          <Router>\n            <Header />\n            <Section />\n          </Router>\n        </div>\n      </DataProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}